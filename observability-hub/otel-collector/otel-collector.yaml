---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otlp-receiver
  namespace: observability
spec:
  spec:
  mode: "deployment"
  ingress:
    type: route
    route:
      termination: "passthrough"
      #host: "otc.apps.platform-sts.pcbk.p1.openshiftapps.com"
      targetPort: otlp-http
      to:
        kind: Service
        name: otlp-receiver-collector
  config: |
    extensions:
      bearertokenauth:
        scheme: "Bearer"
        filename: "/var/run/secrets/kubernetes.io/serviceaccount/token"
    receivers:
      otlp:
        protocols:
          grpc:
            tls:
              cert_file: /tls/server.cert.pem
              key_file: /tls/server.key.pem
              client_ca_file: /etc/pki/ca-trust/source/client-ca/cacert.pem
          http:
            tls:
              cert_file: /tls/server.cert.pem
              key_file: /tls/server.key.pem
              client_ca_file: /etc/pki/ca-trust/source/client-ca/cacert.pem
    exporters:
      debug:
        verbosity: detailed
      otlp:
        endpoint: "tempo-<simplest>-distributor:4317"
        auth:
          authenticator: bearertokenauth
        tls:
          ca_file: "/etc/pki/ca-trust/source/service-ca/service-ca.crt"
    service:
      extensions: [bearertokenauth]
      pipelines:
        traces:
          receivers: [otlp]
          processors: []
          exporters: [debug]
  volumeMounts:
  - name: clientca
    mountPath: /etc/pki/ca-trust/source/client-ca
    readOnly: true
  - name: tls-otelcol
    mountPath: /tls
    readOnly: true
  - name: cabundle-volume
    mountPath: /etc/pki/ca-trust/source/service-ca
    readOnly: true
  volumes:
  - name: tls-otelcol
    configMap:
      name: tls-otelcol
  - name: clientca
    configMap:
      name: clientca
  - name: cabundle-volume
    configMap:
      name: otelcol-cabundle
