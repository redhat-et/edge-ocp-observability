apiVersion: tempo.grafana.com/v1alpha1
kind: TempoStack
metadata:
  name: tempostack
  namespace: observability
spec:
  hashRing:
    memberlist: {}
  images: {}
  limits:
    global:
      ingestion: {}
      query:
        maxSearchDuration: 0s
  managementState: Managed
  observability:
    grafana:
      instanceSelector: {}
    metrics: {}
    tracing:
      jaeger_agent_endpoint: localhost:6831
  replicationFactor: 1
  resources: {}
  retention:
    global:
      traces: 48h0m0s
  search:
    defaultResultLimit: 20
    maxDuration: 0s
  storage:
    secret:
      name: minio-tempo
      type: s3
    tls:
      enabled: false
  storageSize: 1Gi
  template:
    compactor:
      replicas: 1
    distributor:
      component:
        replicas: 1
      tls:
        enabled: false
    gateway:
      component:
        replicas: 1
      enabled: false
      ingress:
        route: {}
    ingester:
      replicas: 1
    querier:
      replicas: 1
    queryFrontend:
      component:
        replicas: 1
      jaegerQuery:
        authentication:
          enabled: true
          sar: '{"namespace": "observability", "resource": "pods", "verb": "get"}'
        enabled: true
        ingress:
          route:
            termination: edge
          type: route
        monitorTab:
          enabled: false
          prometheusEndpoint: ""
        servicesQueryDuration: 72h0m0s
        tempoQuery: {}
  timeout: 30s
